name: Continuous Integration

on: [push]

permissions:
  contents: read # for checkout
  packages: read # for installing cvt packages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Cache NPM
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: .docker-npm-cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Run build
        run: make build
        env:
          GIT_REPOSITORY: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_NAME: "Build Service"
          GIT_EMAIL: "build@cambridge-vision.tech"
          CI: true
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Cache NPM
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: .docker-npm-cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Run format
        run: make format
        env:
          GIT_REPOSITORY: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_NAME: "Build Service"
          GIT_EMAIL: "build@cambridge-vision.tech"
          CI: true
      - name: Run test
        run: make test
        env:
          GIT_REPOSITORY: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_NAME: "Build Service"
          GIT_EMAIL: "build@cambridge-vision.tech"
          CI: true
  release:
    permissions: write-all
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Cache NPM
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: .docker-npm-cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Run Release
        run: make release
        env:
          GIT_REPOSITORY: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_NAME: "Build Service"
          GIT_EMAIL: "build@cambridge-vision.tech"
          CI: true
